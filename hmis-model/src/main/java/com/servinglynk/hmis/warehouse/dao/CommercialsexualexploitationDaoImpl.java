package com.servinglynk.hmis.warehouse.dao;

import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;

import org.apache.hadoop.hbase.thrift2.generated.THBaseService.Iface;
import org.springframework.beans.BeanUtils;

import com.servinglynk.hmis.warehouse.domain.ExportDomain;
import com.servinglynk.hmis.warehouse.domain.Sources.Source.Export;
import com.servinglynk.hmis.warehouse.domain.Sources.Source.Export.CommercialSexualExploitation;
import com.servinglynk.hmis.warehouse.domain.SyncDomain;
import com.servinglynk.hmis.warehouse.enums.CommercialsexualexploitationAskedorforcedtoexchangeforsexEnum;
import com.servinglynk.hmis.warehouse.enums.CommercialsexualexploitationCountofexchangeforsexEnum;
import com.servinglynk.hmis.warehouse.enums.CommercialsexualexploitationExchangeforsexpastthreemonthsEnum;
import com.servinglynk.hmis.warehouse.model.staging.Commercialsexualexploitation;
import com.servinglynk.hmis.warehouse.model.staging.Enrollment;
import com.servinglynk.hmis.warehouse.util.BasicDataGenerator;

public class CommercialsexualexploitationDaoImpl  extends ParentDaoImpl  implements CommercialsexualexploitationDao {
	
	@Override
	public void hydrateStaging(ExportDomain domain) 
	{
		Export export = domain.getExport();
		List<CommercialSexualExploitation> commercialSexualExploitations = export.getCommercialSexualExploitation();
		if(commercialSexualExploitations!=null && !commercialSexualExploitations.isEmpty())
		{
			for(CommercialSexualExploitation commercialSexualExploitation:  commercialSexualExploitations)
			{
				Commercialsexualexploitation commerExploitation = new Commercialsexualexploitation();
				commerExploitation.setAskedorforcedtoexchangeforsex(CommercialsexualexploitationAskedorforcedtoexchangeforsexEnum.lookupEnum(BasicDataGenerator.getStringValue(commercialSexualExploitation.getAskedOrForcedToExchangeForSex())));
				commerExploitation.setCountofexchangeforsex(CommercialsexualexploitationCountofexchangeforsexEnum.lookupEnum(BasicDataGenerator.getStringValue(commercialSexualExploitation.getCountOfExchangeForSex())));
				commerExploitation.setExchangeforsexpastthreemonths(CommercialsexualexploitationExchangeforsexpastthreemonthsEnum.lookupEnum(BasicDataGenerator.getStringValue(commercialSexualExploitation.getExchangeForSexPastThreeMonths())));
				commerExploitation.setId(UUID.randomUUID());
				commerExploitation.setDateCreated(BasicDataGenerator.getLocalDate(commercialSexualExploitation.getDateCreated()));
				commerExploitation.setDateUpdated(BasicDataGenerator.getLocalDate(commercialSexualExploitation.getDateUpdated()));
				Map<String, UUID> enrollmentProjectEntryIDMap = domain.getEnrollmentProjectEntryIDMap();
				UUID exportId = domain.getExportId();
				com.servinglynk.hmis.warehouse.model.staging.Export exportEntity = (com.servinglynk.hmis.warehouse.model.staging.Export) get(com.servinglynk.hmis.warehouse.model.staging.Export.class, exportId);
				commerExploitation.setExport(exportEntity);
				Enrollment enrollmentModel = (Enrollment) get(Enrollment.class, enrollmentProjectEntryIDMap.get(commercialSexualExploitation.getProjectEntryID()));
				commerExploitation.setEnrollmentid(enrollmentModel);
				exportEntity.addCommercialsexualexploitation(commerExploitation);
				insertOrUpdate(commerExploitation);
				
			}
		}
	}

	@Override
	public void hydrateLive(
			com.servinglynk.hmis.warehouse.model.staging.Export export) {
		Set<Commercialsexualexploitation> commercialsexualexploitations = export.getCommercialsexualexploitations();
		if(commercialsexualexploitations != null && !commercialsexualexploitations.isEmpty()) {
			for(Commercialsexualexploitation commercialsexualexploitation : commercialsexualexploitations) {
				com.servinglynk.hmis.warehouse.model.live.Commercialsexualexploitation target = new com.servinglynk.hmis.warehouse.model.live.Commercialsexualexploitation();
				BeanUtils.copyProperties(commercialsexualexploitation, target,getNonCollectionFields(target));
				com.servinglynk.hmis.warehouse.model.live.Export exportEntity = (com.servinglynk.hmis.warehouse.model.live.Export) get(com.servinglynk.hmis.warehouse.model.live.Export.class, export.getId());
				target.setExport(exportEntity);
				com.servinglynk.hmis.warehouse.model.live.Enrollment enrollmentModel = (com.servinglynk.hmis.warehouse.model.live.Enrollment) get(com.servinglynk.hmis.warehouse.model.live.Enrollment.class,export.getId());
				target.setEnrollmentid(enrollmentModel);
				exportEntity.addCommercialsexualexploitation(target);
				insert(target);
			}
		}
	}

	@Override
	public void hydrateHBASE(SyncDomain syncDomain) {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected void performSave(Iface client, Object entity) {
		// TODO Auto-generated method stub
		
	}

	@Override
	protected List performGet(Iface client, Object entity) {
		// TODO Auto-generated method stub
		return null;
	}

}
