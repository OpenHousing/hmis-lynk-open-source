package com.servinglynk.hmis.warehouse.model.live;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.UUID;import javax.persistence.CascadeType;import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.FetchType;import javax.persistence.GeneratedValue;import javax.persistence.JoinColumn;import javax.persistence.ManyToOne;import javax.persistence.OneToMany;import javax.persistence.OneToOne;import javax.persistence.Table;import org.hibernate.annotations.GenericGenerator;@Entity@Table(name = "hmis_user")public class AccountEntity  {    @javax.persistence.Id    @GenericGenerator(name = "uuid-gen", strategy = "uuid2")    @GeneratedValue(generator = "uuid-gen")    @org.hibernate.annotations.Type(type="pg-uuid")	@Column(name = "id")	private java.util.UUID id;	@Column(name = "username")	private String username;	@Column(name = "password")	private String password;	@Column(name = "first_name")	private String firstName;	@Column(name = "middle_name")	private String middleName;	@Column(name = "last_name")	private String lastName;		@Column(name="name_suffix")	private String nameSuffix;		@Column(name="ssn")	private String ssn;	public String getStatus() {		return status;	}	public void setStatus(String status) {		this.status = status;	}/*	@Column(name="gender")	private String gender;*/		@Column(name="dob")	private Date dob;		@Column(name="status")	private String status;		@ManyToOne(optional = true,fetch = FetchType.LAZY)	@JoinColumn(name = "verification_id", nullable = true, referencedColumnName = "id")    private VerificationEntity verification;			    	public java.util.UUID getId() {		return id;	}	protected void setId(java.util.UUID id) {		this.id = id;	}	public String getUsername() {		return username;	}	public void setUsername(String username) {		this.username = username.toLowerCase();	}	public String getPassword() {		return password;	}	public void setPassword(String password) {		this.password = password;	}	public String getFirstName() {		return firstName;	}	public void setFirstName(String firstName) {		this.firstName = firstName;	}	public String getMiddleName() {		return middleName;	}	public void setMiddleName(String middleName) {		this.middleName = middleName;	}	public String getLastName() {		return lastName;	}	public void setLastName(String lastName) {		this.lastName = lastName;	}		@OneToOne(mappedBy = "account", cascade = CascadeType.ALL,optional=true)	@JoinColumn(name="id")	private AccountPreferenceEntity accountPreference;	public AccountPreferenceEntity getAccountPreference() {		return this.accountPreference;	}		public void setAccountPreference(AccountPreferenceEntity accountPreference) {		this.accountPreference = accountPreference;	}		@OneToOne( mappedBy = "account", cascade = CascadeType.ALL,optional=true)	@JoinColumn(name="id")	private AccountLockoutEntity accountLockout;	public AccountLockoutEntity getAccountLockout() {		return this.accountLockout;	}		public void setAccountLockout(AccountLockoutEntity accountLockout) {		this.accountLockout = accountLockout;	}	public VerificationEntity getVerification() {		return verification;	}	public void setVerification(VerificationEntity verification) {		this.verification = verification;	}/*	public String getGender() {		return gender;	}	public void setGender(String gender) {		this.gender = gender;	}*/		@Column(name = "date_created")	protected Date createdAt = new java.util.Date();			@Column(name = "date_updated")	protected Date modifiedAt;		public Date getCreatedAt() {		return createdAt;	}	public void setCreatedAt(Date createdAt) {		this.createdAt = createdAt;	}	public Date getModifiedAt() {		return modifiedAt;	}	public void setModifiedAt(Date modifiedAt) {		this.modifiedAt = modifiedAt;	}			public  String getNewGuid() {		return UUID.randomUUID().toString().toUpperCase();	}	public String getNameSuffix() {		return nameSuffix;	}	public void setNameSuffix(String nameSuffix) {		this.nameSuffix = nameSuffix;	}	public Date getDob() {		return dob;	}	public void setDob(Date dob) {		this.dob = dob;	}			@Column(name = "created_by")	protected String createdBy;		@Column(name = "modified_by")	protected String modifiedBy;		public String getCreatedBy() {		return createdBy;	}	public void setCreatedBy(String createdBy) {		this.createdBy = createdBy;	}	public String getModifiedBy() {		return modifiedBy;	}		public void setModifiedBy(String modifiedBy) {		this.modifiedBy = modifiedBy;	}	public String getSsn() {		return ssn;	}	public void setSsn(String ssn) {		this.ssn = ssn;	}		@ManyToOne(fetch=FetchType.LAZY)    @JoinColumn(name="profile_id")    private ProfileEntity profileEntity;      public ProfileEntity getProfileEntity() {		return profileEntity;	}	public void setProfileEntity(ProfileEntity profileEntity) {		this.profileEntity = profileEntity;	}		@OneToMany(fetch=FetchType.LAZY, mappedBy="account")	private List<UserPermissionSetAclEntity> userPermissionSetAcls=new ArrayList<UserPermissionSetAclEntity>();	public List<UserPermissionSetAclEntity> getUserPermissionSetAcls() {		return userPermissionSetAcls;	}	public void setUserPermissionSetAcls(List<UserPermissionSetAclEntity> userPermissionSetAcls) {		this.userPermissionSetAcls = userPermissionSetAcls;	}		@ManyToOne(fetch=FetchType.LAZY)    @JoinColumn(name="organization_id")	private Organization organization;	public Organization getOrganization() {		return organization;	}	public void setOrganization(Organization organization) {		this.organization = organization;	}			}